@model Albumes_MemoriesByCoco.Models.InicioSesionModel
<div class="container CentrarDiv">
    <div class="row">
        <div class="col-lg-4 col-md-4 col-sm-1">

        </div>
        <div class="col-lg-4 col-md-4 col-sm-10">
            <div class="card">
                <div class="card-header d-flex align-items-center justify-content-center">
                   <a href="@Url.Action("IndexMemoriesByCoco","Inicio")"><img width="100" height="100" src="~/Imagenes/Logo transparente.png" /></a>
                </div>
                @using (Html.BeginForm("Logearse", "InicioSesion"))
                {

                    <div class="card-body inicioSesionBg">
                        <h2>Inicio de sesión</h2>
                        <p class="letraMidInfo">¿Eres nuevo? <a href="@Url.Action("RegistroUsuarios", "Registro")">Crear una cuenta</a> </p>
                        <hr />
                        <div class="d-flex  flex-column justify-content-center align-items-center">


                            @Html.EditorFor(Model => Model.strCorreo, "", new { htmlAttributes = new { @class = "form-control", placeholder = "Correo", type = "email" } })
                            @Html.ValidationMessageFor(Model => Model.strCorreo, "", new { @class = "text-danger" })

                            <br />


                            @Html.EditorFor(Model => Model.strPassword, "", new { htmlAttributes = new { @class = "form-control", placeholder = "Contraseña", type = "password" } })
                            @Html.ValidationMessageFor(Model => Model.strPassword, "", new { @class = "text-danger" })

                            <br />
                            @if (ViewBag.DatosInvalidos != null)
                            {
                                <p class="text-center text-danger">Datos invalidos</p>
                            }
                            <button onclick="ProgressButton()" class="btnIngresar m-2">Ingresar</button>

                            <div id="ProgressButton" class="progress-btn active btnIngresar" data-progress-style="indefinite-circle">

                                <svg class="progress circle-loader" width="40" height="40" version="1.1" xmlns="http://www.w3.org/2000/svg">
                                    <circle cx="20" cy="20" r="15"></circle>
                                </svg>

                            </div>






                        </div>

                        <div class="d-flex justify-content-center m-2">
                            <a class="logGoogle d-flex flex-row justify-content-center align-items-center">
                              <img width="20" height="20" src="~/Imagenes/ZAl1gIwyUsvfwxoW9ns47iJFioHXODBbIkrK.png" />


                            </a>
                        </div>
                        <p class="text-center"> <a class="text-center letraMidInfo" href="@Url.Action("RecuperarContraseña", "RecuperarPassword")">¿Olvidaste tu contraseña?</a></p>
                    </div>







                }

            </div>
        </div>
        <div class="col-lg-4 col-md-4 col-sm-1">

            <fb:login-button scope="public_profile,email"
                             onlogin="checkLoginState();">
            </fb:login-button>
        </div>

    </div>

</div>




<style>
    .logGoogle {
        padding: 8px;
        width: 80%;
        height: 25%;
        background-color: #171b51;
        color: white;
        border-radius: 5px;
        border: solid 2px #171b51;
    }

        .logGoogle:hover {
            cursor: pointer;
        }

    .btnIngresar {
        padding: 8px;
        width: 80%;
        height: 25%;
        background-color: #171b51;
        color: white;
        border-radius: 5px;
        border: solid 2px #171b51;
    }
</style>



<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script>
    $("#ProgressButton").hide();

    window.fbAsyncInit = function () {
        FB.init({
            appId: '{your-app-id}',
            cookie: true,
            xfbml: true,
            version: '{api-version}'
        });

        FB.AppEvents.logPageView();

    };

    (function (d, s, id) {
        var js, fjs = d.getElementsByTagName(s)[0];
        if (d.getElementById(id)) { return; }
        js = d.createElement(s); js.id = id;
        js.src = "https://connect.facebook.net/en_US/sdk.js";
        fjs.parentNode.insertBefore(js, fjs);
    }(document, 'script', 'facebook-jssdk'));





    FB.getLoginStatus(function (response) {
        statusChangeCallback(response);
    });



    function checkLoginState() {
        FB.getLoginStatus(function (response) {
            statusChangeCallback(response);
        });
    }

    function ProgressButton() {
        $(".btnIngresar").hide()
        $("#ProgressButton").show();
    }



    $(document).ready(function () {
        $(".progress-btn").on("click", function () {
            var progressBtn = $(this);

            if (!progressBtn.hasClass("active")) {
                progressBtn.addClass("active");
                setTimeout(function () {
                    progressBtn.removeClass("active");
                }, 10000);
            }
        })
    });





</script>



